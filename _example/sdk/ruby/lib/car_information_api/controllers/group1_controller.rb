# This file was automatically generated by APIMATIC BETA v2.0 on 11/01/2014

module CarInformationApi
  class Group1Controller

    # TODO: type endpoint description here
    # @param [String] reg_no Required parameter: TODO: type description here
    # @param [String] color Optional parameter: TODO: type description here
    # @param [CarTypesEnum] cart_type Optional parameter: TODO: type description here
    # @param [Hash] query_parameters Additional optional query parameters are supported by this endpoint
    # @return CarInfoModel response from the API call
    def get_car_info reg_no, color: nil, cart_type: nil, query_parameters: nil
      # the base uri for api requests
      query_builder = Configuration::BASE_URI

      # prepare query string for API call
      query_builder << "/carinfo"

      # process optional query parameters
      query_builder = APIHelper.append_url_with_query_parameters query_builder, {
        :RegNo => reg_no,
        :Color => color,
        :CartType => cart_type,
      }

      # append optional parameters to the query
      query_builder = APIHelper.append_url_with_query_parameters query_builder, query_parameters)

      # validate and preprocess url
      query_url = APIHelper.clean_url query_builder

      # prepare headers
      headers = {
        "User-Agent" => "APIMATIC 2.0",
        "Accept" => "application/json"
      }

      # invoke the API call request to fetch the response
      response = Unirest.get query_url, headers:headers

      #Error handling using HTTP status codes
      if !(response.code.between?(200,206)) # [200,206] = HTTP OK
        raise APIException.new "HTTP Response Not OK", response.code
      end

      response.body
    end
        
    # TODO: type endpoint description here
    # @param [String] new_owner Required parameter: The new owner of this car
    # @param [Numeric] odometer Required parameter: Current kilometers reading from odometer
    # @param [Hash] field_parameters Additional optional form parameters are supported by this endpoint
    # @return Boolean response from the API call
    def post_update_car_info new_owner, odometer, field_parameters: nil
      # the base uri for api requests
      query_builder = Configuration::BASE_URI

      # prepare query string for API call
      query_builder << "/carinfo"

      # validate and preprocess url
      query_url = APIHelper.clean_url query_builder

      # prepare headers
      headers = {
        "User-Agent" => "APIMATIC 2.0"
      }

      # prepare parameters
      parameters = {
        :NewOwner => new_owner,
        :Odometer => odometer,
      }

      # invoke the API call request to fetch the response
      response = Unirest.post query_url, headers:headers, parameters:parameters

      #Error handling using HTTP status codes
      if !(response.code.between?(200,206)) # [200,206] = HTTP OK
        raise APIException.new "HTTP Response Not OK", response.code
      end

      response.body
    end
        

  end
end