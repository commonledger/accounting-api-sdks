<?php
/*
 * CarInformationAPILib
 *
 * This file was automatically generated by APIMATIC BETA v2.0 on 11/01/2014
 */

class Group1Controller {
    /**
     * TODO: type endpoint description here
     * @param   string $regNo    Required parameter: TODO: type description here
     * @param   string|null $color    Optional parameter: TODO: type description here
     * @param   CarTypesEnum|null $cartType    Optional parameter: TODO: type description here
     * @param    array  $queryParameters    Additional optional query parameters are supported by this endpoint
     * @return CarInfoModel response from the API call*/
    public function GetCarInfo (
                $regNo,
                $color = NULL,
                $cartType = NULL,
                $queryParameters = NULL) 
    {
        //the base uri for api requests
        $queryBuilder = Configuration::BASEURI;
        
        //prepare query string for API call
        $queryBuilder = $queryBuilder.'/carinfo';

        //process optional query parameters
        APIHelper::appendUrlWithQueryParameters($queryBuilder, array (
            'RegNo' => $regNo,
            'Color' => $color,
            'CartType' => (null != $cartType) ? $cartType : null,
        ));

        //append optional parameters to the query
        APIHelper::appendUrlWithQueryParameters($queryBuilder, queryParameters);

        //validate and preprocess url
        $queryUrl = APIHelper::cleanUrl($queryBuilder);

        //prepare headers
        $headers = array (
            'User-Agent' => 'APIMATIC 2.0',
            'Accept' => 'application/json'
        );

        //prepare API request
        $request = Unirest::get($queryUrl, $headers);

        //and invoke the API call request to fetch the response
        $response = $request->getResponse();

        //Error handling using HTTP status codes
        if (($response->code < 200) || ($response->code > 206)) { //[200,206] = HTTP OK
            throw new APIException("HTTP Response Not OK", $response->code);
        }

        return $response->body;
    }
        
    /**
     * TODO: type endpoint description here
     * @param   string $newOwner    Required parameter: The new owner of this car
     * @param   int $odometer    Required parameter: Current kilometers reading from odometer
     * @param    array  $fieldParameters    Additional optional form parameters are supported by this endpoint
     * @return bool response from the API call*/
    public function postUpdateCarInfo (
                $newOwner,
                $odometer,
                $fieldParameters = NULL) 
    {
        //the base uri for api requests
        $queryBuilder = Configuration::BASEURI;
        
        //prepare query string for API call
        $queryBuilder = $queryBuilder.'/carinfo';

        //validate and preprocess url
        $queryUrl = APIHelper::cleanUrl($queryBuilder);

        //prepare headers
        $headers = array (
            'User-Agent' => 'APIMATIC 2.0'
        );

        //prepare parameters
        $parameters = array (
            'NewOwner' => $newOwner,
            'Odometer' => $odometer,
        );

        //prepare API request
        $request = Unirest::post($queryUrl, $headers, $parameters);

        //and invoke the API call request to fetch the response
        $response = $request->getResponse();

        //Error handling using HTTP status codes
        if (($response->code < 200) || ($response->code > 206)) { //[200,206] = HTTP OK
            throw new APIException("HTTP Response Not OK", $response->code);
        }

        return $response->body;
    }
        
}