'''
CarInformationAPILib

This file was automatically generated by APIMATIC BETA v2.0 on 11/01/2014
'''
import unirest
from APIHelper import *
from Configuration import *
from APIException import *

class Group1Controller:

    def GetCarInfo(self,
                regNo,
                color = None,
                cartType = None,
                $queryParameters = None):
        '''
        TODO: type endpoint description here

        :param regNo: Required TODO: type description here 
        :type regNo: string
        :param color: Optional TODO: type description here 
        :type color: string|null
        :param cartType: Optional TODO: type description here 
        :type cartType: CarTypesEnum|null
        :param queryParameters:Additional optional query parameters are supported by this endpoint 
       :type:queryParameters: array     Additional optional query parameters are supported by this endpoint
        :returns: response from the API call
        :rType: CarInfoModel 
        '''
    
        #the base uri for api requests
        queryBuilder = Configuration.BASEURI
 
        #prepare query string for API call
        queryBuilder += "/carinfo"

        #process optional query parameters
        queryBuilder = APIHelper.appendUrlWithQueryParameters(queryBuilder,{
                     "RegNo": regNo ,
                     "Color": color ,
                     "CartType":  cartType if (None != cartType) else None ,
            })

        #append optional parameters to the query
        queryBuilder = APIHelper.appendUrlWithQueryParameters(queryBuilder, queryParameters)

        #validate and preprocess url
        queryUrl = APIHelper.cleanUrl(queryBuilder)

        #prepare headers
        headers = {
            "User-Agent" : "APIMATIC 2.0",
            "Accept" : "application/json",
        }

        #prepare and invoke the API call request to fetch the response
        response = unirest.get(queryUrl, headers=headers)

        #Error handling using HTTP status codes
        if response.code < 200 and response.code > 206: #200 = HTTP OK
            raise APIException("HTTP Response Not OK", response.code)     

        return response.body

    def postUpdateCarInfo(self,
                newOwner,
                odometer,
                $fieldParameters = None):
        '''
        TODO: type endpoint description here

        :param newOwner: Required The new owner of this car 
        :type newOwner: string
        :param odometer: Required Current kilometers reading from odometer 
        :type odometer: int
        :param fieldParameters:Additional optional form parameters are supported by this endpoint 
       :type:fieldParameters: array     Additional optional form parameters are supported by this endpoint
        :returns: response from the API call
        :rType: bool 
        '''
    
        #the base uri for api requests
        queryBuilder = Configuration.BASEURI
 
        #prepare query string for API call
        queryBuilder += "/carinfo"

        #validate and preprocess url
        queryUrl = APIHelper.cleanUrl(queryBuilder)

        #prepare headers
        headers = {
            "User-Agent" : "APIMATIC 2.0",
        }

        #prepare parameters
        parameters = {
            "NewOwner": newOwner,
            "Odometer": odometer,
        }

        #prepare and invoke the API call request to fetch the response
        response = unirest.post(queryUrl, headers=headers, params=parameters)

        #Error handling using HTTP status codes
        if response.code < 200 and response.code > 206: #200 = HTTP OK
            raise APIException("HTTP Response Not OK", response.code)     

        return response.body
